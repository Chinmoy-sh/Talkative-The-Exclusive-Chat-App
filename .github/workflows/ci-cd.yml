name: Talkative CI/CD Pipeline

on:
  push:
    branches: [main, develop, staging]
  pull_request:
    branches: [main, develop]
  release:
    types: [published]

env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  # Code Quality and Testing
  test:
    name: 🧪 Test & Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Verify the install
        run: flutter doctor -v

      - name: 🎨 Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: 📊 Analyze project source
        run: flutter analyze --fatal-infos

      - name: 🧪 Run tests
        run: flutter test --coverage --test-randomize-ordering-seed random

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Build Android
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔐 Setup Android signing
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/key.jks
          echo "storeFile=key.jks" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties

      - name: 🔥 Setup Firebase
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json

      - name: 🏗️ Build Android APK
        run: flutter build apk --release --split-per-abi

      - name: 🏗️ Build Android App Bundle
        run: flutter build appbundle --release

      - name: 📤 Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/*.apk

      - name: 📤 Upload AAB artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/*.aab

  # Build iOS
  build-ios:
    name: 🍎 Build iOS
    runs-on: macos-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔥 Setup Firebase
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}" | base64 --decode > ios/Runner/GoogleService-Info.plist

      - name: 📱 Setup iOS
        run: |
          flutter precache --ios
          cd ios && pod install

      - name: 🏗️ Build iOS (No Codesign)
        run: flutter build ios --release --no-codesign

      - name: 📤 Upload iOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/ios/iphoneos/Runner.app

  # Build Web
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🏗️ Build Web
        run: flutter build web --release --web-renderer html

      - name: 📤 Upload Web artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

      - name: 🚀 Deploy to GitHub Pages (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web

  # Security Scan
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Release
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web]
    if: github.event_name == 'release'
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-apk
          path: ./artifacts/android

      - name: 📥 Download AAB artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-aab
          path: ./artifacts/android

      - name: 📥 Download Web artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: ./artifacts/web

      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/android/*.apk
            ./artifacts/android/*.aab
          generate_release_notes: true
          draft: false
          prerelease: false